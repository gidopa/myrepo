OOP - Object Oriented Programming -> 객체지향프로그래밍

학습목표
	1. 현실세계에 존재하는 object(객체)? 
		물리적으로 존재하거나 추상적으로 생각할 수 있는 것
		자기만의 데이터를 가지며 식별 가능한 동작이나 기능을 가진 모든 것 
		사람 -> 각각의 데이터 (신장, 몸무게, 부모, etc...) + 동작(밥먹기, 숨쉬기 ...)
		
	2. 현실세계에 존재하는 객체를 모델링
		현실세계의 객체를 sw 측면의 객체로 만들기 위해 데이터 + 동작등을 추출하는 작업
		
	3. 객체지향프로그래밍이란?
		객체를 모델링하여 sw 측면의 객체 메모리로 만들어
		메모리간 의사소통 표현을 코드로 구현하여 프로그램을 만드는 작업
	4. 현실세계에서 클래스?
		현실세계에 존재하는 객체를 만들기 위한 틀 또는 설계도
	5. java sw에서 클래스란?
		현실세계의 객체를 모델링하여 코드로 옮겨놓고 객체 메모리 생성을 위한 하나의 설계도 
		sw측면에서 클래스(class) 설계도 내부의 구성요소
		멤버변수 + 메소드
		멤버변수 - 객체의 데이터를 저장하는 메모리
		메소드 - 객체의 동작이나 기능을 정의하기 위한 함수
	6. 객지프 3단계 기법
		1단계 : 현실세계에 존재하는 객체를 모델링 하는 단계
		2단계 : 모델링한 데이터와 동작을 이용해 클래스를 생성
		class Tree{
			String name;
			char color;
			int age; 				멤버 변수
			int fruit_count;
			----------------------------------
			
			public static void move(){
				System.out.println("바람에 흔들리다");						메서드
			}
			
			void fall(){
				System.out.println("열매가 떨어짐");
			}
		}
		
		사과나무 
			데이터 - name=사과나무, color='R', age = 100
			동작 - 흔들리다, 사과가 떨어지다
		배나무
			데이터 - name=배나무, color='B', age = 99
			동작 - 흔들리다, 배가 떨어지다
		
		3단계 : class를 이용해서 컴퓨터 메모리에 올라가는 객체 메모리를 생성해 사용하는 단계
			 Tree apple_tr = new Tree();
			 Tree pear_tr = new Tree();
		
			apple_tr.color = 'R';
			apple_tr.name = "사과나무";
			apple_tr.age = 100;
			
			apple_tr.move();
			apple_tr.fall();
			pear_tr.colr = 'Y';
			
	객체 지향 프로그래밍의 3단계 순서
	1.객체 모델링
	2.클래스 생성
	3.객체 생성
	
	Ex2



