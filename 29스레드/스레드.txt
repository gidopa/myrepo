프로그램? os에 설치된 sw로 실행되고 있지 않음
프로세스? 실행중인 프로그램
스레드 ? 프로세스 내부에서 독릭적으로 실행되는 하나의 작업(기능)단위.
멀티스레드 ? 하나의 프로세스 내부에서 스레드들이 번갈아가며 실행되는 것


예제1. Thread클래스를 상속받아 새로운 스레드역할의 클래스 만들기
- ThreadEx01.java

예제2. Thread클래스를 상속받아 새로운 스레드역할의 클래스 만들기
- ThreadEx01_1.java

예제3. Runnable인터페이스를 구현(run추상메소드를 오버라이딩받아) 
      run메소드를 메소드오버라이딩 해놓은 일반적인 클래스를 만들고
           일반클래스의 객체를 생성해서  실제 new Thread(일반클래스의객체생성주소);를 만들어서 사용하는 방법
- Test.java

예제4. Runnable인터페이스를 구현(run추상메소드를 오버라이딩받아) 
      run메소드를 메소드오버라이딩 해놓은 일반적인 클래스를 만들고
           일반클래스의 객체를 생성해서  실제 new Thread(일반클래스의객체생성주소);를 만들어서 사용하는 방법
- Test_1.java


연습1. Thread클래스를 상속받아 새로운 스레드 클래스 만들기 연습
- ThreadEx02.java

연습2. 연습1에 했던 ThreadEx02.java파일을 복사하여 ThreadEx03으로 만든뒤 
      Runnable인터페이스를 구현하는 방법으로 변경해 보자.  (예제4.방법참고)
- ThreadEx03.java      


예제5. 메인스레드(싱글스레드)로 많은 일을 처리하는 단점
- SingleThreadEx1.java

예제6.메인스레드(싱글스레드)로 많은 일을 처리하는 단점 2
- SingleThreadEx2.java

예제7.예제6.메인스레드로 많은일을 처리한것을 나눠서 보조작업스레드에게 시키기!
- MultiThreadEx2.java

예제8. 예제7.을 업그레드 시켜 10초단 다이얼로그창에 입력하지 않으면 다이얼로그창 강제종료 시키기!
- MultiThreadEx3.java

과제. 
- MultiThreadTest.java파일을 열어서 문제를 해결해 보세요

예제9. 스레드의 상태
- 보조작업작업스레드클래스  : ThreadDemo3.java
- 메인스레드가 존재하는 클래스 : ThreadEx04.java

예제10. start(), run()메소드 
- ThreadEx05.java

예제11. 현재 실행중인 스레드를 강제로 중지시키는 플래그변수 이용한 예
- StopThreadEx1.java

예제12. 현재 실행중인 스레드를 강제로 중지시키 위한 interrupt()메소드를 이용한 예
- StopThreadEx2.java

예제13. 각 스레드 우선순위 작업(스케줄링)
- PriorityMain.java

예제14. 메인 스레드를 기준으로 해서 스레드 그룹 (메인그룹)만들어 보기 
- ThreadEx08.java

예제15. 데몬스레드?
- ThreadEx09.java

예제16. 스택 안의 현재 실행되고 있는 일반스레드  + 데몬스레드 정보 출력 예제
- ThreadEx10.java

예제17. yield()메소드(양보) 를 사용한 예제
- ThreadEx11.java

예제18. yield()메소드와  interrupt()메소드를 사용한 예제
- ThreadEx11_1.java
 
예제19. isAlive()메소드 예제
- ThreadEx12.java

예제20. join()메소드 예제
- ThreadEx13.java

예제21. 스레드간의 데이터 교환 예제
- ThreadEx14.java

예제22. 스레드간의 동기화문제가 발생시 동기화처리 예제
- SyncThreadEx1.java

예제23. 스레드간의 동기화문제가 발생시 동기화처리 예제
- SyncThreadEx2.java










