에러 - 컴퓨터 하드웨어의 고장으로 인해 응용프로그램 실행 오류가 발생

예외 - 잘못된 사용 또는 코딩으로 인한 오류가 발생하는것

예외가 발생하면 프로그램 종료 , 프로그램을 끝까지 수행하게 하려면 예외처리를 해야함

종류 
1. 일반 예외 (Exception)
	- 컴파일러가 예외처리 코드 여부를 검사하는 예외
2. 실행 예외 (Runtime Exception)
	- 컴파일러가 예외 처리코드 여부를 검사하지 않는 예외
	
예외가 발생하면 예외 처리 클래스로부터 객체를 생성함  이 객체는 예외처리시 사용.
 자바의 에러와 예외처리 클래스는 Throwable을 상속받아 만들어지고 예외처리클래스는 java.lang.Exception클래스 상속
 
 일반예외처리
 ClassNotFoundException, InterruptedException ... 
 실행예외처리
 RuntimeException- NullPointerException, ArrayIndexOutOfBOundException, NumberFormatException
 
 예외처리하는 코드 문법
 try{
 	예외 발생 가능 코드1;
 	예외 발생 가능 코드2;
 }
 catch(예외처리클래스1 매개변수){
 	예외발생 시 예외처리 코드;
 }catch(예외처리클래스2 매개변수){
 	예외2 발생 시 예외처리 코드;
 }finally{
 	try,catch에 상관없이 한번 수행될 코드
 }
 ------------------------------------------------------
 try블록에서 작성한 코드가 예외없이 실행되면 catch는 실행되지않고 finally 실행
 try블록에서 예외가 발생하면 catch 실행하고 finally 실행
 
 예외 떠넘기기
 
 메소드 내부에서 예외 발생시 try-catch 블록으로 예외를 처리하는것이 기본이지만
 메소드를 호출한 곳으로 예외처리를 던지기 할 수 있음 throws 예외클래스명
 
나열해야할 예외종류 클래스명이 많을 경우에는 throws Exceoption 또는 throws Thorwalbe만으로 모든 예외처리를 간단히 넘길 수 있음
 
 main() 메소드에서도 throws 키워드를 사용해 예외처리를 떠넘길 수 있는데
 JVM이 최종적으로 예외처리를 함. JVM은 예외의 내용을 콘솔창에 출력
 
 --------------------------------------------------------------------------------------------
 예외 강제로 발생 시키는 코드가 있음
 자바에서 제공하는 표준 예외 뿐 아니라 사용자 정의 예외를 직접코드에서 발생시키려면 throws키워드 사용
 예외의 원인에 해당하는 메세지를 제공하는 싶다면 생성자 매개값으로 전달 
 throw new Exception();		throw new Exception("예외메시지");
 throw new RuntimeException();
 throw new InsufficientException();
 
throw된 예외는 직접 try-catch로 잡을수도 있지만 대부분은 메소드를 호출한 곳에서 예외를 처리하도록 throws키워드로 예외처리를 넘김
void method(){
	try{
		throw new Exception("예외메세지");
	}catch(Exception e){
		STring msg = e.getMessage();
	}
	정상코드;
}


void method() throws Exception{
	throw new Exception("예외메세지");
}
 
 
 
 
 
 
 
 